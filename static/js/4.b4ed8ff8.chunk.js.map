{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/Paginator/Paginator.module.css","../node_modules/classnames/index.js","components/Users/Users.module.css","assets/images/user.png","components/common/Paginator/Pagination.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","inner","apply","key","call","join","default","Pagination","totalItemsCount","pageSize","currentPage","onPageChanged","x","portionSize","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","cn","s","paginator","onClick","filter","p","map","selectedPage","pageNumber","e","User","user","followingInProgress","unfollow","follow","to","id","src","photos","small","userPhoto","usersPhoto","alt","followed","disabled","some","name","status","Users","totalUsersCount","users","props","u","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","toggleFollowingProgress","React","Component","mapDispatchToProps","setCurrentPage","compose","connect"],"mappings":"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","file":"static/js/4.b4ed8ff8.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2S1bl\",\"page\":\"Paginator_page__2-acV\",\"paginator\":\"Paginator_paginator__2kjE4\",\"pageNumber\":\"Paginator_pageNumber__3GS2D\"};","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__35eaD\",\"selectedPage\":\"Users_selectedPage__owQS8\",\"UnselectedPage\":\"Users_UnselectedPage__20S_K\"};","module.exports = __webpack_public_path__ + \"static/media/user.3b305908.png\";","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\nimport cn from 'classnames'\r\n\r\n\r\nexport type PaginatorType = {\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalItemsCount: number,\r\n    portionSize?: number\r\n\r\n\r\n}\r\n\r\nlet Pagination: React.FC<PaginatorType> = ({totalItemsCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChanged = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize) / 50;\r\n    // let pagesCount = 30\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n    return <div className={cn(s.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\nexport default Pagination","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Pagination from \"../common/Paginator/Pagination\";\r\n\r\n\r\nexport type UserType = {\r\n    photos: {\r\n        small: string,\r\n        large: string,\r\n    }\r\n    unfollow: boolean\r\n    follow: boolean\r\n    name: string\r\n    status: string\r\n    id: number\r\n}\r\n\r\nexport type UsersTypeProps = {\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void\r\n    totalUsersCount: number,\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followingInProgress: Array<number>\r\n\r\n\r\n}\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow}:any) => {\r\n    return <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/` + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.usersPhoto} alt={''}\r\n                             key={user.id}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n\r\n                            ? <button disabled={followingInProgress.some((id:number) => id === user.id)} onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some((id:number) => id === user.id)} onClick={() => {\r\n                                follow(user.id)\r\n                            }}>Follow</button>\r\n                        }\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>ID: {user.id}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                </span>\r\n\r\n                </div>\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Pagination from \"../common/Paginator/Pagination\";\r\nimport User from \"./User\";\r\n\r\n\r\nexport type UserType = {\r\n    photos: {\r\n        small: string,\r\n        large: string,\r\n    }\r\n    unfollow: boolean\r\n    follow: boolean\r\n    name: string\r\n    status: string\r\n    id: number\r\n}\r\n\r\nexport type UsersTypeProps = {\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void\r\n    totalUsersCount: number,\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followingInProgress: Array<number>\r\n\r\n\r\n}\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}: UsersTypeProps) => {\r\n    return <>\r\n        <Pagination pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged}\r\n                    totalItemsCount={totalUsersCount} />\r\n\r\n        {\r\n            users.map((u: any) => <User user={u}\r\n                                        key={u.id}\r\n                                        followingInProgress={props.followingInProgress}\r\n                                        unfollow={props.unfollow}\r\n                                        follow={props.follow}\r\n                />\r\n            )}\r\n    </>\r\n}\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: any) => {\r\n    return state.usersPage.users\r\n}\r\n\r\n\r\n// export const getUsers = createSelector( getUsersSelector,\r\n//     (users:any)=>{\r\n//      users.filter((u:any)=>u)\r\n// })\r\n//\r\nexport const getUsers = (state: any) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n\r\nexport const getPageSize = (state: any) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\n\r\nexport const getTotalUsersCount = (state: any) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: any) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: any) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: any) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../redux/users-reducer\";\r\nimport Users, {UserType} from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {AppStoreType} from \"../../redux/redux-store\";\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setTotalUsersCount: (count: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<any> {\r\n\r\n    componentDidMount(): void {\r\n        const {currentPage,pageSize } = this.props\r\n        this.props.requestUsers(currentPage,pageSize );\r\n\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber,pageSize );\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n\r\n            />\r\n        </>\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state: AppStoreType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n\r\n)(UsersContainer)"],"sourceRoot":""}