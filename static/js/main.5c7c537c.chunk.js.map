{"version":3,"sources":["api/api.ts","hoc/WithAuthRedirect.tsx","utilities/object-helpers.ts","redux/users-reducer.tsx","assets/images/loader.svg","components/common/preloader/Preloader.module.css","components/Navbar/Navbar.module.css","serviceWorker.tsx","redux/auth-reducer.tsx","redux/news-reducer.tsx","redux/app-reducer.tsx","redux/redux-store.tsx","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/News/News.tsx","components/News/NewsContainer.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/FormsControls/FormControls.tsx","components/common/FormsControls/FormControls.module.css","components/common/preloader/Preloader.tsx","utilities/validators/validators.tsx","components/Header/Header.module.css","redux/profile-reducer.tsx","redux/dialogs-reducer.tsx"],"names":["instance","axios","create","baseURL","withCredentials","headers","instanceNews","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","log","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","newsAPI","getnews","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","usersReducer","action","followed","filter","id","module","exports","Boolean","window","location","hostname","match","setAuthUserData","payload","getAuthUserData","authReducer","news","newsReducer","initialized","appReducer","reducers","combineReducers","dialogsPage","dialogsReducer","profilePage","profileReducer","usersPage","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","Navbar","className","s","nav","item","activeClassName","activeLink","active","Music","Settings","Header","logInfo","header","src","loginBlock","onClick","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","required","Input","common","formSummaryError","message","messages","length","stopSubmit","_error","formdata","Users","content","n","title","NewsContainer","getNews1","News","getNews","articles","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","AppContainer","withRouter","SamuraiJSApp","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasErorr","styles","formControl","TextArea","restProps","child","placeholder","name","validators","component","text","validate","img","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","newPostText","addLikeAC","addPostActionCreator","setStatus","getUserProfile","newPost","p","postId","i","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"uGAAA,6JAGMA,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAMbC,EAAeL,IAAMC,OAAO,CAC9BC,QAAQ,GAAD,OAHO,uCAGP,mHACPE,QAAS,CACL,UAAW,sCAKNE,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOV,EAASW,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAAYE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEjGC,OAJoB,SAIbC,GACH,OAAOhB,EAASiB,KAAT,iBAAwBD,KAEnCE,SAPoB,SAOXF,GACL,OAAOhB,EAASmB,OAAT,iBAA0BH,KAErCI,WAVoB,SAUTJ,GAEP,OADAK,QAAQC,IAAI,2CACLC,EAAWH,WAAWJ,KAKxBO,EAAa,CACtBH,WADsB,SACXJ,GACP,OAAOhB,EAASW,IAAT,kBAAwBK,KAEnCQ,UAJsB,SAIZR,GACN,OAAOhB,EAASW,IAAT,yBAA+BK,KAE1CS,aAPsB,SAOTC,GACT,OAAO1B,EAAS2B,IAAT,iBAA+B,CAACD,OAAQA,MAI1CE,EAAU,CACnBC,GADmB,WAEf,OAAO7B,EAASW,IAAT,YAEXmB,MAJmB,SAIbC,EAAeC,GAAgD,IAA9BC,EAA6B,wDAChE,OAAOjC,EAASiB,KAAT,aAA4B,CAACc,QAAOC,WAAUC,gBAEzDC,OAPmB,WAQf,OAAOlC,EAASmB,OAAT,gBAGFgB,EAAU,CAEnBC,QAFmB,WAGf,OAAO9B,EAAaK,IAAI,O,uIC3D5B0B,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAoB,IAC3CC,EAD0C,uKAGxC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHJ,GAChBC,IAAML,WAStC,OAF0CM,YAAQX,EAARW,CAAoCL,K,8PCjBrEM,EAAsB,SAACC,EAAYC,EAAaC,EAAkBC,GAE3E,OAAOH,EAAMI,KAAI,SAACC,GACd,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCOXC,EAAe,CACfC,MAAO,GACP/C,SAAU,EACVgD,gBAAiB,EACjBjD,YAAa,IACbkD,YAAY,EACZC,oBAAqB,IAwGZC,EAAgB,SAAC7C,GAAD,MAAqB,CAAC8C,KAtHpC,SAsHkD9C,WACpD+C,EAAkB,SAAC/C,GAAD,MAAqB,CAAC8C,KAtHpC,WAsHoD9C,WAExDgD,EAAiB,SAACvD,GAAD,MAA0B,CAACqD,KAtHhC,mBAsHwDrD,gBAKpEwD,EAAmB,SAACN,GAAD,MAA0B,CAACG,KAzHhC,qBAyH0DH,eACxEO,EAA0B,SAACP,EAAqB3C,GAAtB,MAA0C,CAC7E8C,KA1HiC,+BA2HjCH,aACA3C,WAKSmD,EAAe,SAACC,EAAc1D,GACvC,8CAAO,WAAO2D,GAAP,eAAAC,EAAA,6DACHD,EAASJ,GAAiB,IAC1BI,EAASL,EAAeI,IAFrB,SAGc7D,IAASC,SAAS4D,EAAM1D,GAHtC,OAGCI,EAHD,OAIHuD,EAASJ,GAAiB,IAC1BI,EArB6C,CAACP,KAtHpC,YAsHqDL,MAqB7C3C,EAAKoC,QACvBmB,EApBwD,CAC5DP,KAvH0B,wBAwH1BS,MAkBgCzD,EAAK0D,aAN9B,2CAAP,uDAUEC,EAAkB,uCAAG,WAAOJ,EAAyBrD,EAAgB0D,EAAgBC,GAAhE,SAAAL,EAAA,6DACvBD,EAASH,GAAwB,EAAMlD,IADhB,SAEF0D,EAAU1D,GAFR,OAGS,GAHT,OAGVF,KAAK8D,YACdP,EAASM,EAAc3D,IAE3BqD,EAASH,GAAwB,EAAOlD,IANjB,2CAAH,4DAUXD,EAAS,SAACC,GACnB,8CAAO,WAAOqD,GAAP,eAAAC,EAAA,sDACCI,EAAYnE,IAASQ,OAAO8D,KAAKtE,KACrCkE,EAAmBJ,EAAUrD,EAAQ0D,EAAWb,GAF7C,2CAAP,uDAMS3C,EAAW,SAACF,GACrB,8CAAO,WAAOqD,GAAP,eAAAC,EAAA,sDACCI,EAAYnE,IAASW,SAAS2D,KAAKtE,KACvCkE,EAAmBJ,EAAUrD,EAAQ0D,EAAWX,GAF7C,2CAAP,uDAMWe,IA3GM,WAA+E,IAA9ExC,EAA6E,uDAArDkB,EAAcuB,EAAuC,uCAE/F,OAAQA,EAAOjB,MACX,IAlEO,SAmEH,OAAO,2BACAxB,GADP,IAGImB,MAAOR,EAAoBX,EAAMmB,MAAOsB,EAAO/D,OAAQ,KAAK,CAACgE,UAAS,MAQ9E,IA7ES,WA+EL,OAAO,2BACA1C,GADP,IAGImB,MAAOR,EAAoBX,EAAMmB,MAAOsB,EAAO/D,OAAQ,KAAK,CAACgE,UAAS,MAQ9E,IAzFU,YA0FN,OAAO,2BAAI1C,GAAX,IAAkBmB,MAAOsB,EAAOtB,QAEpC,IA3FiB,mBA4Fb,OAAO,2BAAInB,GAAX,IAAkB7B,YAAasE,EAAOtE,cAE1C,IA7FsB,wBA8FlB,OAAO,2BAAI6B,GAAX,IAAkBoB,gBAAiBqB,EAAOR,QAE9C,IA/FmB,qBAgGf,OAAO,2BAAIjC,GAAX,IAAkBqB,WAAYoB,EAAOpB,aAEzC,IAjG6B,+BAkGzB,OAAO,2BACArB,GADP,IAEIsB,oBAAqBmB,EAAOpB,WAAP,sBACXrB,EAAMsB,qBADK,CACgBmB,EAAO/D,SACtCsB,EAAMsB,oBAAoBqB,QAAO,SAACC,GAAD,OAAgBA,GAAMH,EAAO/D,YAI5E,QACI,OAAOsB,K,oBCtHnB6C,EAAOC,QAAU,IAA0B,oC,oBCC3CD,EAAOC,QAAU,CAAC,IAAM,yB,mBCAxBD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,qJCWjEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mFCdFjC,EAAe,CACfxC,OAAQ,KACRe,MAAO,KACPD,MAAO,KACPS,QAAQ,GAyCCmD,EAAkB,SAAC1E,EAAuBe,EAAsBD,EAAsBS,GAApE,MAAyF,CACpHuB,KA/CkB,qBAgDlB6B,QAAS,CAAC3E,SAAQe,QAAOD,QAAOS,YAKvBqD,EAAkB,yDAAM,WAAOvB,GAAP,uBAAAC,EAAA,sEACV1C,IAAQC,KADE,OAEA,KAD3BhB,EAD2B,QAEpBC,KAAK8D,aAAmB,EACR/D,EAASC,KAAKA,KAAlCiB,EAD2B,EAC3BA,MAAOmD,EADoB,EACpBA,GAAIpD,EADgB,EAChBA,MAChBuC,EAASqB,EAAgBR,EAAInD,EAAOD,GAAO,KAJd,2CAAN,uDAmBlBI,EAAS,SAACH,EAAeC,EAAkBC,GAAlC,8CAA0D,WAAMoC,GAAN,SAAAC,EAAA,sEACtD1C,IAAQM,SAD8C,OAEnC,IAFmC,OAEvDpB,KAAK8D,YACdP,EAASqB,EAAgB,KAAM,KAAM,MAAM,IAHqB,2CAA1D,uDAOPG,EAnDK,WAA6E,IAA5EvD,EAA2E,uDAApDkB,EAAcuB,EAAsC,uCAE5F,OAAQA,EAAOjB,MAEX,IAhCc,qBAiCV,OAAO,2BACAxB,GACAyC,EAAOY,SAIlB,QACI,OAAOrD,I,kBClCfkB,EAAe,CACfsC,KAAM,IA+BKC,EA3BY,WAAwC,IAAvCzD,EAAsC,uDAA9BkB,EAAcuB,EAAgB,uCAE9D,OAAQA,EAAOjB,MAEX,IAhBS,WAiBL,OAAO,2BACAxB,GADP,IAEIwD,KAAMf,EAAOe,OAGrB,QACI,OAAOxD,ICrBfkB,EAAe,CACfwC,aAAa,GA0CFC,EA/BI,WAAuD,IAAtD3D,EAAqD,uDAA9BkB,EAAcuB,EAAgB,uCAErE,OAAQA,EAAOjB,MAEX,IAlBoB,sBAmBhB,OAAO,2BACAxB,GADP,IAEI0D,aAAa,IAIrB,QACI,OAAO1D,IClBb4D,EAAWC,YAAgB,CAE7BC,YAAaC,IACbC,YAAaC,IACbC,UAAW1B,IACXtC,KAAMqD,EACNC,KAAMC,EACNU,IAAKR,EACLS,KAAMC,MASJC,EAAmBtB,OAAOuB,sCAAwCC,QAEpEC,EAAQC,YAAYd,EAAUU,EAAkBK,YAAgBC,OAKpE5B,OAAOyB,MAASA,EAKDA,Q,mFCJAI,EA9BA,WACX,OACI,yBAAKC,UAAWC,IAAEC,KACd,yBAAKF,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASzE,GAAG,WAAW0E,gBAAiBH,IAAEI,YAA1C,YAEJ,yBAAKL,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASzE,GAAG,SAAS0E,gBAAiBH,IAAEI,YAAxC,UAEJ,yBAAKL,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASzE,GAAG,QAAQ0E,gBAAiBH,IAAEI,YAAvC,SAEJ,yBAAKL,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEK,SAC3B,kBAAC,IAAD,CAAS5E,GAAG,WAAW0E,gBAAiBH,IAAEI,YAA1C,aAGJ,yBAAKL,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASzE,GAAG,SAAS0E,gBAAiBH,IAAEI,YAAxC,UAEJ,yBAAKL,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASzE,GAAG,YAAY0E,gBAAiBH,IAAEI,YAA3C,e,QCVDE,EARF,SAAC9E,GACV,OACI,uCCGO+E,EARC,SAAC/E,GACb,OACI,0C,iBCcOgF,EAhBA,SAAChF,GAIZ,IAAMiF,EAAU,MAAOjF,EAAM7B,OAAS,IAAM6B,EAAMf,MAClD,OACI,4BAAQsF,UAAWC,IAAEU,QACjB,yBACIC,IAAI,4EAER,yBAAKZ,UAAWC,IAAEY,YACZpF,EAAMN,OAAS,6BAAMuF,EAAN,MAAiB,4BAAQI,QAASrF,EAAMX,QAAvB,YAAuD,kBAAC,IAAD,CAASY,GAAI,UAAb,Y,QCRnGqF,E,uKAKE,OACI,kBAAC,EAAWvF,KAAKC,W,GANCE,IAAML,WAqBrBM,eATU,SAACV,GAAD,MAAyB,CAC9CC,OAAQD,EAAME,KAAKD,OACnBT,MAAOQ,EAAME,KAAKV,MAClBC,MAAOO,EAAME,KAAKT,MAClBf,OAAOsB,EAAME,KAAKxB,UAKkB,CAAEkB,UAA3Bc,CAAoCmF,G,0CCD7CC,GAAiBC,YAAU,CAAC3B,KAAM,SAAjB2B,EAjBL,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,aAAaC,EAAe,EAAfA,MAE7B,OAAO,oCACH,0BAAMC,SAAUF,GAEPG,YAAY,QAAS,QAAS,CAACC,KAAUC,IAAO,IAChDF,YAAY,WAAY,WAAY,CAACC,KAAUC,IAAM,CAAC7E,KAAK,aAC3D2E,YAAY,KAAM,aAAc,GAAGE,IAAM,CAAC7E,KAAK,YAAY,eAC/DyE,EAAQ,yBAAKnB,UAAWwB,IAAOC,kBAAmBN,GAAe,GAClE,6BACI,+CA2BDvF,gBAHS,SAACV,GAAD,MAAiB,CACrCC,OAAQD,EAAME,KAAKD,UAEiB,CAACT,MTgBpB,SAACC,EAAeC,EAAkBC,GAAlC,8CAA0D,WAAOoC,GAAP,iBAAAC,EAAA,sEACpD1C,IAAQE,MAAMC,EAAOC,EAAUC,GADqB,OAElC,KADnCpB,EADqE,QAEtDC,KAAK8D,WACdP,EAASuB,MAELkD,EAAUjI,EAASC,KAAKiI,SAASC,OAAS,EAAInI,EAASC,KAAKiI,SAAS,GAAK,iCAC9E1E,EAAS4E,YAAW,QAAS,CAACC,OAAQJ,MANyB,2CAA1D,uDShB2B5G,UAAjCc,EAjBD,SAACH,GAKX,OAAIA,EAAMN,OACC,kBAAC,IAAD,CAAUO,GAAI,aAGlB,6BACH,qCACA,kBAACsF,GAAD,CAAgBI,SATH,SAACW,GACdtG,EAAMf,MAAMqH,EAASpH,MAAOoH,EAASnH,SAAUmH,EAASlH,mB,UCfjDmH,GAfH,SAACvG,GAET,OADAxB,QAAQC,IAAIuB,GACL,oCAEFA,EAAMiD,KAAKkD,OAAO,EAAEnG,EAAMiD,KAAK,IAAIuD,QAAQ,GAC3CxG,EAAMiD,KAAKxC,KAAI,SAACgG,GACb,OAAO,6BAAMA,EAAEC,YCDrBC,G,kLAEE5G,KAAKC,MAAM4G,a,+BAGX,OAAO,oCACH,kBAACC,GAAD,CACI5D,KAAMlD,KAAKC,MAAMiD,KACjB6D,QAAS/G,KAAKC,MAAM8G,e,GARR5G,IAAML,WA2BnBoE,eACXrE,KACAO,aAhBoB,SAACV,GACrB,MAAO,CACHwD,KAAKxD,EAAMwD,KAAKA,SAIC,SAACzB,GAAD,MAAoB,CACzCoF,SAAU,kBAAMpF,EVKhB,uCAAO,WAAOA,GAAP,eAAAC,EAAA,sEACcnC,IAAQC,UADtB,OACCtB,EADD,OAEHuD,EALsC,CAACP,KA5B9B,WA4B8CgC,KAKtChF,EAAKA,KAAK8I,WAFxB,2CAAP,4DUEW9C,CAIb0C,I,SCnCWK,GAAe,SAACnH,GAGzB,OAAO,SAACG,GAEJ,OAAO,kBAAC,IAAMiH,SAAP,CAAgBC,SAAU,kBAACC,GAAA,EAAD,OAC7B,kBAACtH,EAAcG,MCSrBoH,GAAmBlH,IAAMmH,MAAK,kBAAM,iCACpCC,GAAmBpH,IAAMmH,MAAK,kBAAM,iCACpCE,GAAiBrH,IAAMmH,MAAK,kBAAM,iCAGlCG,G,kLAGEzH,KAAKC,MAAMyH,kB,+BAIX,OAAK1H,KAAKC,MAAMmD,YAKZ,kBAAC,IAAD,KACI,yBAAKoB,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAOmD,KAAK,oBAAoBC,OAAQX,GAAaM,MACrD,kBAAC,IAAD,CAAOI,KAAK,WAAWC,OAAQX,GAAaI,MAC5C,kBAAC,IAAD,CAAOM,KAAK,SAASC,OAAQX,GAAaO,MAC1C,kBAAC,IAAD,CAAOG,KAAK,QAAQC,OAAQX,GAAaL,MACzC,kBAAC,IAAD,CAAOe,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,YAfxC,kBAACR,GAAA,EAAD,U,GARDjH,IAAML,WAmCpB+H,GAAe3D,YACf4D,IACA1H,aALoB,SAACV,GAAD,MAAiB,CACrC0D,YAAa1D,EAAMmE,IAAIT,eAIE,CAACsE,cXxBD,kBAAM,SAACjG,GAClBA,EAASuB,KACdhF,MAAK,WACVyD,EANoC,CAACP,KAhCjB,+BWyDTgD,CAE4BuD,IAShCM,GAPW,SAAC9H,GACvB,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,CAAUkE,MAAOA,GACb,kBAAC0D,GAAD,SCjDO1D,EAAM6D,WAPrBC,IAASL,OACN,kBAAC,GAAD,MACCM,SAASC,eAAe,SfuH1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtK,MAAK,SAAAuK,GACJA,EAAaC,gBAEdC,OAAM,SAAA9C,GACLlH,QAAQkH,MAAMA,EAAMO,a,2LgBlItBwC,EAAc,SAAC,GAA2C,EAA1CC,MAA2C,IAAD,IAAnCC,KAAMC,EAA6B,EAA7BA,QAAQlD,EAAqB,EAArBA,MAAOmD,EAAc,EAAdA,SACxCC,EAAYF,GAAYlD,EAE9B,OACI,yBAAKnB,UAAWwE,IAAOC,YAAc,KAAOF,EAAWC,IAAOrD,MAAQ,KAClE,6BACKmD,GAEJC,GAAY,8BAAOpD,KAQnBuD,EAAW,SAACjJ,GAAgB,IAC9B0I,EAAoC1I,EAApC0I,MAAuBQ,GAAalJ,EAA7B2I,KAA6B3I,EAAvBmJ,MADgB,YACOnJ,EADP,2BAGpC,OAAO,kBAACyI,EAAgBzI,EAAO,8CAAe0I,EAAWQ,MAGhDpD,EAAQ,SAAC9F,GAAgB,IAC3B0I,EAAoC1I,EAApC0I,MAAuBQ,GAAalJ,EAA7B2I,KAA6B3I,EAAvBmJ,MADa,YACUnJ,EADV,2BAGjC,OAAO,kBAACyI,EAAgBzI,EAAO,2CAAW0I,EAAWQ,MAE5CtD,EAAc,SAACwD,EAAkBC,EAAWC,EAAiBC,GAA/C,IAA8DvJ,EAA9D,uDAAsE,GAAGwJ,EAAzE,uDAA8E,GAA9E,OACvB,6BACI,kBAAC,IAAD,eACID,UAAWA,EACXH,YAAaA,EACbC,KAAMA,EACNI,SAAUH,GACNtJ,IACLwJ,K,mBCzCXlH,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,wFCW1G4E,IARC,WACZ,OACI,6BACI,yBAAK5C,UAAWC,IAAEkF,IAAKvE,IAAKwE,S,gCCLxC,oEAAO,IAAM9D,EAAW,SAAC+D,GACrB,IAAIA,EACJ,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAC5B,SAACF,GACD,GAAIA,EAAMzD,OAAO2D,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCThCxH,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,6PCU3D5B,EAAiC,CACjCoJ,MAAO,CACH,CAAC1H,GAAI,EAAG4D,QAAS,mBAAoB+D,WAAY,GACjD,CAAC3H,GAAI,EAAG4D,QAAS,qBAAsB+D,WAAY,GACnD,CAAC3H,GAAI,EAAG4D,QAAS,YAAa+D,WAAY,IAG9CC,QAAS,KACTpL,OAAQ,GACRqL,YAAa,IAuFJC,EAAY,SAAC9H,GAAD,MAAiB,CAACpB,KApG1B,WAoG0C6B,QAAS,CAACT,QACxD+H,EAAuB,SAACF,GAAD,MAA0B,CAACjJ,KAvG9C,WAuG8DiJ,gBAGlEG,EAAY,SAACxL,GAAD,MAAqB,CAACoC,KAtG5B,aAsG8CpC,WAGpDyL,EAAiB,SAACnM,GAAD,8CAAiB,WAAMqD,GAAN,eAAAC,EAAA,sEACrB/D,IAASa,WAAWJ,GADC,OACvCH,EADuC,OAEvCwD,EANyC,CAACP,KAtGzB,mBAsGiDgJ,QAM1CjM,EAASC,OAFM,2CAAjB,uDAIjBU,EAAY,SAACR,GAAD,8CAAmB,WAAOqD,GAAP,eAAAC,EAAA,sEAClB/C,IAAWC,UAAUR,GADH,OACnCH,EADmC,OAEpCwD,EAAS6I,EAAUrM,EAASC,OAFQ,2CAAnB,uDAKZW,EAAe,SAACC,GAAD,8CAAoB,WAAM2C,GAAN,SAAAC,EAAA,sEACtB/C,IAAWE,aAAaC,GADF,OAEH,IAFG,OAEvBZ,KAAK8D,YACdP,EAAS6I,EAAUxL,IAHa,2CAApB,uDAQb6E,IArEQ,WAAmF,IAAlFjE,EAAiF,uDAAvDkB,EAAcuB,EAAyC,uCAErG,OAAQA,EAAOjB,MACX,IA5DS,WA6DL,IAAIsJ,EAAuB,CACvBlI,GAAI,EACJ4D,QAAS/D,EAAOgI,YAChBF,WAAY,GAEhB,OAAO,2BACAvK,GADP,IAEIsK,MAAM,GAAD,mBAAMtK,EAAMsK,OAAZ,CAAmBQ,IACxBL,YAAa,KAGrB,IAvEY,cAwER,OAAO,2BAAIzK,GAAX,IAAkBsK,MAAMtK,EAAMsK,MAAM3H,QAAO,SAAAoI,GAAC,OAAGA,EAAEnI,KAAMH,EAAOuI,YAGlE,IA1ES,WA2EL,OAAO,2BACAhL,GADP,IAEIsK,MAAOtK,EAAMsK,MAAMtJ,KAAI,SAACiK,GACpB,OAAO,2BAAIA,GAAX,IAAcV,WAAYU,EAAErI,KAAOH,EAAOY,QAAQT,GAAKqI,EAAEV,WAAa,EAAIU,EAAEV,kBAIxF,IAjFiB,mBAkFb,OAAO,2BACAvK,GADP,IAEIwK,QAAS/H,EAAO+H,UAGxB,IAtFW,aAuFP,OAAO,2BACAxK,GADP,IAEIZ,OAAQqD,EAAOrD,SAGvB,QACI,OAAOY,K,qFCjGfkB,EAAe,CACfgK,QAAS,CACL,CAACtI,GAAI,EAAGgH,KAAM,UACd,CAAChH,GAAI,EAAGgH,KAAM,UACd,CAAChH,GAAI,EAAGgH,KAAM,SACd,CAAChH,GAAI,EAAGgH,KAAM,SACd,CAAChH,GAAI,EAAGgH,KAAM,UACd,CAAChH,GAAI,EAAGgH,KAAM,WAElBnD,SAAU,CACN,CAAC7D,GAAI,EAAG4D,QAAS,MACjB,CAAC5D,GAAI,EAAG4D,QAAS,4BACjB,CAAC5D,GAAI,EAAG4D,QAAS,MACjB,CAAC5D,GAAI,EAAG4D,QAAS,MACjB,CAAC5D,GAAI,EAAG4D,QAAS,MAAO,CAAC5D,GAAI,EAAG4D,QAAS,MACzC,CAAC5D,GAAI,EAAG4D,QAAS,MACjB,CAAC5D,GAAI,EAAG4D,QAAS,QA2CZ2E,EAAqB,SAACC,GAAD,MAAoD,CAAC5J,KA5DlE,eA4DsF4J,mBAI5FrH,IAxBQ,WAAmF,IAAlF/D,EAAiF,uDAAvDkB,EAAcuB,EAAyC,uCAGrG,OAAQA,EAAOjB,MAGX,IA9Ca,eA+CT,IAAI6J,EAAO5I,EAAO2I,eAClB,OAAO,2BACApL,GADP,IAEIyG,SAAS,GAAD,mBAAMzG,EAAMyG,UAAZ,CAAsB,CAAC7D,GAAI,EAAG4D,QAAS6E,OAEvD,QACI,OAAOrL,M","file":"static/js/main.5c7c537c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'bdb9022f-3466-40e1-957a-ab975d07c6cb'\r\n    }\r\n\r\n});\r\nconst corseFree = 'https://cors-anywhere.herokuapp.com/'\r\n\r\nconst instanceNews = axios.create({\r\n    baseURL: `${corseFree}https://newsapi.org/v2/everything?domains=techcrunch.com,thenextweb.com&apiKey=69c53b6ef0414fbb8941b1b333cea919`,\r\n    headers: {\r\n        'api-key': '69c53b6ef0414fbb8941b1b333cea919'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        console.log('Obsolete method. Please use  profileAPI')\r\n        return profileAPI.getProfile(userId)\r\n\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\nexport const newsAPI = {\r\n\r\n    getnews() {\r\n        return instanceNews.get('')\r\n    }\r\n}\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {AppStoreType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStoreType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedmapStateToPropsForRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedmapStateToPropsForRedirect;\r\n}\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {UserType} from \"../components/Users/Users\";\r\nimport {Dispatch} from \"react\";\r\nimport {updateObjectInArray} from \"../utilities/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 100,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Types\r\ntype UsersStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nexport type FollowType = {\r\n    type: 'FOLLOW'\r\n    userId: number\r\n}\r\nexport type UnfollowType = {\r\n    type: 'UNFOLLOW'\r\n    userId: number\r\n}\r\nexport type SetUsersType = {\r\n    type: 'SET_USERS'\r\n    users: Array<UserType>\r\n}\r\n\r\nexport type SetCurrentPageType = {\r\n    type: 'SET_CURRENT_PAGE'\r\n    currentPage: number\r\n}\r\nexport type SetTotalUsersCountType = {\r\n    count: number;\r\n    type: 'SET_TOTAL_USERS_COUNT'\r\n    setTotalUsersCount: number\r\n}\r\nexport type ToggleIsFetchingType = {\r\n    type: 'TOGGLE_IS_FETCHING'\r\n    isFetching: boolean\r\n}\r\n\r\nexport type ToggleIsFollowingProgressType = {\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\ntype ActionType = FollowType | UnfollowType | SetUsersType | SetCurrentPageType | SetTotalUsersCountType\r\n    | ToggleIsFetchingType | ToggleIsFollowingProgressType\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Reducer\r\nconst usersReducer = (state: UsersStateType = initialState, action: ActionType): UsersStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n\r\n                users: updateObjectInArray(state.users, action.userId, 'id',{followed:true})\r\n                //     state.users.map((u: any) => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                //   users: [...state.users],\r\n                users: updateObjectInArray(state.users, action.userId, 'id',{followed:false})\r\n                //     state.users.map((u: any) => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id: number) => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Actions\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Thunks\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<any>, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI)\r\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess)\r\n\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n        followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.42d7254d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Preloader_img__3jx9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ZjNct\",\"item\":\"Navbar_item__1xLiP\",\"activeLink\":\"Navbar_activeLink__2SviR\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config:any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl:any, config:any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl:any, config:any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Types\r\ntype authStateType = {\r\n    userId: null | number\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\n\r\nexport type SetUserDataType = {\r\n    type: 'auth/SET_USER_DATA'\r\n    payload: {\r\n        userId: number | null,\r\n        email: string | null,\r\n        login: string | null,\r\n        isAuth: boolean\r\n    },\r\n}\r\ntype ActionType = SetUserDataType\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Reducer\r\nconst authReducer = (state: authStateType = initialState, action: ActionType): authStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Actions\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Thunks\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {email, id, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'email or password is not valid'\r\n                dispatch(stopSubmit('login', {_error: message})) //диспатчим AC который пришел из redux-form  библиотеки\r\n                //1 параметр - название формы\r\n            }\r\n\r\n\r\n}\r\nexport const logout = (email: string, password: string, rememberMe: boolean) => async(dispatch: any) => {\r\n    const response =await authAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n}\r\n\r\nexport default authReducer;\r\n","import {newsAPI} from \"../api/api\";\r\n\r\nconst SET_NEWS = 'SET_NEWS';\r\n\r\nexport type setNewsType = {\r\n    type: 'SET_USERS'\r\n    users: Array<any>\r\n}\r\n\r\nlet initialState = {\r\n    news: []\r\n\r\n}\r\n\r\nexport const newsReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_NEWS:\r\n            return {\r\n                ...state,\r\n                news: action.news\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setNews = (news: Array<any>) => ({type: SET_NEWS, news});\r\n\r\nexport const getNews = () => {\r\n    return async (dispatch: any) => {\r\n        let data = await newsAPI.getnews()\r\n        dispatch(setNews(data.data.articles));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default newsReducer;\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INiTIALIZED_SUCCESS = 'INiTIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Types\r\ntype authStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Reducer\r\nconst appReducer = (state: authStateType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INiTIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Actions\r\nexport const setInitializedSuccess = () => ({type: INiTIALIZED_SUCCESS});\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Thunks\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n     promise.then(()=>{\r\n        dispatch(setInitializedSuccess())\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport newsReducer from \"./news-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    news: newsReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n\r\n})\r\n\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// @ts-ignore\r\nlet store = createStore(reducers, composeEnhancers (applyMiddleware(thunkMiddleWare)));\r\n\r\n\r\n\r\n// @ts-ignore\r\nwindow.store =  store\r\n\r\n\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n\r\n\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './Music.module.css';\r\n\r\ntype MusicType = {\r\n    name:any\r\n}\r\n\r\nconst Music =(props:any)=>{\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css';\r\n\r\n\r\nconst Settings =(props:any)=>{\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props: any) => {\r\n\r\n\r\n\r\n    const logInfo = 'ID ' +props.userId + ' ' + props.login\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/b/be/Lineage_OS_Logo.png\"\r\n            />\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth ? <div>{logInfo} - <button onClick={props.logout}>Log out</button></div>: <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {AppStoreType} from \"../../redux/redux-store\";\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps  = (state:AppStoreType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    email: state.auth.email,\r\n    userId:state.auth.userId,\r\n\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, { logout})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormControls\";\r\nimport {required} from \"../../utilities/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport common from '../common/FormsControls/FormControls.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit,error}:any) => {\r\n\r\n    return <>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n                {createField('Email', 'email', [required],Input, {})}\r\n                {createField('Password', 'password', [required],Input,{type:'password'})}\r\n                {createField(null, 'rememberMe', [],Input,{type:'checkbox'},'remember me')}\r\n            {error ? <div className={common.formSummaryError}>{error}</div> : ''}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </>\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props: any) => {\r\n\r\n    const onSubmit = (formdata: any) => {\r\n        props.login(formdata.email, formdata.password, formdata.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login, logout})(Login)","import React, {useEffect} from 'react';\r\n\r\n\r\nlet Users = (props: any) => {\r\n    console.log(props)\r\n    return <>\r\n        {/* с {props.news.map} не работает*/}\r\n        {props.news.length>0?props.news[11].content:''}\r\n        {props.news.map((n:any)=> {\r\n            return <div>{n.title}</div>\r\n        } )}\r\n        {/*{props.news.length>0? props.news.forEach((e:any)=>{return <span>{e}</span>;}):''}*/}\r\n\r\n\r\n\r\n    </>\r\n}\r\n\r\nexport default Users","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AppStoreType} from \"../../redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from 'redux';\r\nimport News from \"./News\";\r\nimport {getNews} from \"../../redux/news-reducer\";\r\n\r\nclass NewsContainer extends React.Component<any> {\r\n    componentDidMount(): void {\r\n        this.props.getNews1();\r\n    }\r\n    render() {\r\n        return <>\r\n            <News\r\n                news={this.props.news}\r\n                getNews={this.props.getNews}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStoreType) => {\r\n    return {\r\n        news:state.news.news\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => ({\r\n    getNews1: () => dispatch(getNews())\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n\r\n)(NewsContainer)","import React from \"react\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component: any) => {\r\n\r\n\r\n    return (props: any) => {\r\n\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n//import UsersContainer from \"./components/Users/UsersContainer\";\r\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport NewsContainer from \"./components/News/NewsContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {compose} from 'redux';\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\n\r\nclass App extends React.Component<any> {\r\n    componentDidMount(): void {\r\n\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                        <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n                        <Route path='/news' render={withSuspense(NewsContainer)}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/login' render={() => <LoginPage/>}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    initialized: state.app.initialized\r\n})\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App) as React.ComponentClass;\r\n\r\nexport let SamuraiJSApp = (props: any) => {\r\n    return <HashRouter >\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default SamuraiJSApp\r\n\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport ReactDOM from 'react-dom';\r\nimport SamuraiJSApp from './App';\r\n\r\n\r\nlet rerenderEntireTree: any = (state: any) => {\r\n\r\n    ReactDOM.render(\r\n       <SamuraiJSApp/>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n\r\nrerenderEntireTree(store.getState());\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utilities/validators/validators\";\r\n\r\n\r\n// @ts-ignore\r\nconst FormControl = ({input, meta:{touched,error},children}) => {\r\n    const hasErorr =  touched &&  error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasErorr ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasErorr && <span>{error}</span>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const TextArea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n\r\n    return <FormControl {...props}><textarea  {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\nexport const createField = (placeholder: any, name: any, validators: any, component: any,props = {},text='') => (\r\n    <div>\r\n        <Field\r\n            component={component}\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3XqTX\",\"error\":\"FormControls_error__23MWW\",\"formSummaryError\":\"FormControls_formSummaryError__fWX4q\"};","import preloader from '../../../assets/images/loader.svg';\r\nimport React from 'react';\r\nimport s from './Preloader.module.css';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img className={s.img} src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","\r\n\r\nexport const required = (value:any) => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength:number)=>\r\n    (value:any) => {\r\n    if (value.length>maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n\r\n\r\nexport default 1;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__MesfW\",\"loginBlock\":\"Header_loginBlock__2XDSJ\"};","import {newPostType} from \"./store\";\r\nimport {IPost} from \"../components/Profile/MyPosts/MyPosts\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {PostType} from \"../components/Profile/MyPosts/Post/Post\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst ADD_LIKE = 'ADD_LIKE';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nlet initialState: profileStateType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 1},\r\n        {id: 2, message: 'It`s my first post', likesCount: 5},\r\n        {id: 3, message: 'Third one', likesCount: 9},\r\n    ],\r\n\r\n    profile: null,\r\n    status: '',\r\n    newPostText: ''\r\n}\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Types\r\ntype profileStateType = {\r\n    posts: Array<PostType>\r\n    profile: null\r\n    status: string\r\n    newPostText: string\r\n}\r\n\r\nexport type AddPostType = {\r\n    type: 'ADD-POST',\r\n    newPostText: string\r\n}\r\nexport type DeletePostType = {\r\n    type: 'DELETE_POST',\r\n    postId: number\r\n}\r\nexport type AddLikeType = {\r\n    type: 'ADD_LIKE',\r\n    payload: {\r\n        id: number\r\n    }\r\n}\r\nexport type UpdateNewPostTextType = {\r\n    type: 'UPDATE-NEW-POST-TEXT',\r\n    newText: string\r\n}\r\nexport type SetUserProfileType = {\r\n    type: 'SET_USER_PROFILE',\r\n    profile: any\r\n}\r\nexport type SetStatusType = {\r\n    type: 'SET_STATUS',\r\n    status: string\r\n}\r\n\r\nexport type ActionType = AddPostType | AddLikeType | UpdateNewPostTextType | SetUserProfileType | SetStatusType | DeletePostType\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Reducer\r\nconst profileReducer = (state: profileStateType = initialState, action: ActionType): profileStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost: newPostType = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case DELETE_POST:{\r\n            return {...state, posts:state.posts.filter(p=> p.id!== action.postId)}\r\n\r\n        }\r\n        case ADD_LIKE: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((i: IPost) => {\r\n                    return {...i, likesCount: i.id === action.payload.id ? i.likesCount + 1 : i.likesCount}\r\n                })\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Actions\r\nexport const addLikeAC = (id: number) => ({type: ADD_LIKE, payload: {id}})\r\nexport const addPostActionCreator = (newPostText: string) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId: number) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile: any) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status});\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Thunks\r\nexport const getUserProfile = (userId: any) => async(dispatch: any) => {\r\n  const response =  await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId: number) =>async (dispatch: any) => {\r\n   const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status: string) => async(dispatch: any) => {\r\n  const response = await  profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n}\r\n\r\n\r\nexport default profileReducer;\r\n","import {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\r\nimport {MessageType} from \"../components/Dialogs/Message/Message\";\r\n\r\n\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'how is your it-kamasutra'},\r\n        {id: 3, message: 'yo'},\r\n        {id: 4, message: 'yo'},\r\n        {id: 5, message: 'yo'}, {id: 3, message: 'yo'},\r\n        {id: 4, message: 'yo'},\r\n        {id: 5, message: 'yo'},\r\n    ],\r\n\r\n};\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Types\r\ntype dialogsStateType = {\r\n    dialogs: Array<DialogItemType>,\r\n    messages: Array<MessageType>\r\n\r\n}\r\nexport type sendMessageCreatorType ={\r\n    newMessageBody:string\r\n    type:'SEND-MESSAGE'\r\n}\r\nexport type updateNewMessageBodyCreatorType ={\r\n    type:'UPDATE-NEW-MESSAGE-BODY'\r\n    body:string\r\n}\r\ntype ActionsType =  sendMessageCreatorType | updateNewMessageBodyCreatorType\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Reducer\r\nconst dialogsReducer = (state: dialogsStateType = initialState, action: ActionsType):dialogsStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n//Actions\r\nexport const sendMessageCreator = (newMessageBody: string):sendMessageCreatorType => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\n\r\nexport default dialogsReducer;\r\n"],"sourceRoot":""}