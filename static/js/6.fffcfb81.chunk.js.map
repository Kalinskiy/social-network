{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Message","props","newMessageElement","React","createRef","className","s","message","ref","DialogItem","path","id","dialog","active","to","activeClassName","src","photo","alt","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","createField","required","Input","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","actions","WithAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FC6BnKC,EApBC,SAACC,GAGb,IAAIC,EAAyBC,IAAMC,YAKnC,OACI,yBAAKC,UAAWC,IAAEC,SACd,0BAAOC,IAAKN,GAAoBD,EAAMM,W,QCHnCE,EAX6B,SAACR,GACzC,IAAIS,EAAO,YAAcT,EAAMU,GAC/B,OACI,yBAAKN,UAAWC,IAAEM,OAAS,IAAMN,IAAEO,QAC/B,kBAAC,IAAD,CAASC,GAAIJ,EAAMK,gBAAiBT,IAAEO,QAAQ,yBAAKG,IAAKf,EAAMgB,MAAOC,IAAI,KAAKjB,EAAMkB,Q,yBCH1FC,EAAcC,YAAiB,IAiBtBC,cAAyC,CAACC,KAAM,wBAAhDD,EAdoE,SAACrB,GAChF,OACI,0BAAMuB,SAAUvB,EAAMwB,cAElB,6BACKC,YAA0C,qBAAsB,iBAAkB,CAACC,IAAUP,GAAcQ,IAAO,KAEvH,6BACI,6CC6CDC,EA3CgC,SAAC5B,GAC5C,IAAI6B,EAAQ7B,EAAM8B,YAGdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GACrC,OAAO,kBAAC,EAAD,CACHC,IAAKD,EAAExB,GACPQ,KAAMgB,EAAEhB,KACRR,GAAIwB,EAAExB,GACNM,MAAOkB,EAAElB,WAGboB,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAD,OAAO,kBAAC,EAAD,CAASH,IAAKG,EAAE5B,GAAIJ,QAASgC,EAAEhC,aAchF,OAEI,yBAAKF,UAAWC,IAAE2B,SAEd,yBAAK5B,UAAWC,IAAEkC,cACbR,EADL,KAGA,yBAAK3B,UAAWC,IAAEgC,UAEd,6BAAMD,EAAN,KACA,kBAAC,EAAD,CAAgBb,SApBR,SAACiB,GACjBxC,EAAMyC,YAAYD,EAAOE,gBACzB1C,EAAMyC,YAAY,QAed,O,yBCrCGE,sBACXC,aARkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,eAMhB,eAAsBe,MAC7BC,IAFWH,CAGbf","file":"static/js/6.fffcfb81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3U6j2\",\"dialogsItems\":\"Dialogs_dialogsItems__1JwoC\",\"active\":\"Dialogs_active__bfHwF\",\"messages\":\"Dialogs_messages__17ygc\",\"message\":\"Dialogs_message__1bhbT\"};","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\n\r\nexport type MessageType = {\r\n    id?: number\r\n    message: string\r\n\r\n\r\n}\r\nconst Message = (props: MessageType) => {\r\n\r\n\r\n    let newMessageElement: any = React.createRef()\r\n    let sendMessage = () => {\r\n        let text = newMessageElement.current.value;\r\n        alert(text);\r\n    }\r\n    return (\r\n        <div className={s.message}>\r\n            <span  ref={newMessageElement}>{props.message}</span>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {DialogItemType} from '../../../redux/dialogs-reducer'\r\n\r\n\r\nconst DialogItem:React.FC<DialogItemType> = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path} activeClassName={s.active}><img src={props.photo} alt=''/>{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../../utilities/validators/validators\";\r\nimport {createField, Input, TextArea} from \"../../../common/FormsControls/FormControls\";\r\nimport {NewMessageFormType} from \"../../Dialogs\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\nexport type NewMessageFormValuesKeysType = Extract<keyof NewMessageFormType, string>\r\ntype PropsType = {}\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType, PropsType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                {createField<NewMessageFormValuesKeysType>(\"Enter your message\", \"newMessageBody\", [required, maxLength50], Input, {})}\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm<NewMessageFormType, PropsType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./Message/AddMessageForm/AddMessageForm\";\r\nimport {InitialStateType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    dialogsPage: InitialStateType,\r\n    sendMessage: (value: string) => void\r\n\r\n}\r\nexport type NewMessageFormType = {\r\n    newMessageBody: string\r\n}\r\n\r\n\r\nexport const Dialogs: React.FC<OwnPropsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElements = state.dialogs.map((d) => {\r\n        return <DialogItem\r\n            key={d.id}\r\n            name={d.name}\r\n            id={d.id}\r\n            photo={d.photo}/>\r\n    })\r\n\r\n    let messagesElements = state.messages.map((m) => <Message key={m.id} message={m.message}\r\n    />);\r\n\r\n\r\n    let addNewMessage = (values: { newMessageBody: string }) => {\r\n        props.sendMessage(values.newMessageBody)\r\n        props.sendMessage(' ')\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements} {/*рефакторинг через метод массива map*/}\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div>{messagesElements} </div>\r\n                <AddMessageForm onSubmit={addNewMessage}/> {/*форма отправки сообщения через redux-form*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {actions} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions}),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n"],"sourceRoot":""}